// <auto-generated />
using System;
using DSRLearn.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DSRLearn.Context.Migrations.PgSql.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DSRLearn.Context.Entities.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("CreditorId")
                        .HasColumnType("integer");

                    b.Property<int?>("DebtorId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("RepaidDate")
                        .HasColumnType("date");

                    b.Property<Guid>("Uid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("DebtorId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("debts", (string)null);
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("DebtId")
                        .HasColumnType("integer");

                    b.Property<Guid>("Uid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DebtId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("Uid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.UserDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("user_details", (string)null);
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.Debt", b =>
                {
                    b.HasOne("DSRLearn.Context.Entities.User", "Creditor")
                        .WithMany("DebtsIssued")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DSRLearn.Context.Entities.User", "Debtor")
                        .WithMany("DebtsRecieved")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creditor");

                    b.Navigation("Debtor");
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.Payment", b =>
                {
                    b.HasOne("DSRLearn.Context.Entities.Debt", "Debt")
                        .WithMany("Payments")
                        .HasForeignKey("DebtId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Debt");
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.User", b =>
                {
                    b.HasOne("DSRLearn.Context.Entities.UserDetail", "Detail")
                        .WithOne("User")
                        .HasForeignKey("DSRLearn.Context.Entities.User", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.Debt", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.User", b =>
                {
                    b.Navigation("DebtsIssued");

                    b.Navigation("DebtsRecieved");
                });

            modelBuilder.Entity("DSRLearn.Context.Entities.UserDetail", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
